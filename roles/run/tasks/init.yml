# Initialization: Manage internal role setup and the Ansible environment.

---

- name: "Init | Gather role-specific facts"
  ansible.builtin.setup:
    gather_subset:
      - "distribution"
  when:
    - not ansible_facts.keys() | list | intersect(__run_postfix_used_facts) == __run_postfix_used_facts


- name: "Init | Include role meta data"
  ansible.builtin.include_vars:
    file: "../meta/main.yml"
    name: "__run_postfix_meta"


- name: "Init | Check Ansible version requirement and fail if unmet"
  ansible.builtin.fail:
    msg: >
      This role requires Ansible {{ __run_postfix_meta['galaxy_info']['min_ansible_version'] }}
      or higher. You are currently running Ansible {{ ansible_version['full'] }} .
  when:
    - ansible_version['full'] is version_compare(__run_postfix_meta['galaxy_info']['min_ansible_version'], "<")


- name: "Init | Notify when platform support check is not possible"
  ansible.builtin.debug:
    msg: >
      The list of supported platforms cannot be checked as it is either empty
      or distribution facts are missing.
    verbosity: 1
  when:
    - ansible_facts['os_family'] is not defined or
      ansible_facts['distribution'] is not defined or
      ansible_facts['distribution_version'] is not defined or
      ansible_facts['distribution_major_version'] is not defined or
      (__run_postfix_supported_platforms | length) < 1


- name: "Init | Warn when platform is unsupported"
  ansible.builtin.fail:
    msg: >
      Neither {{ ansible_facts['distribution'] }} (distribution) nor {{ ansible_facts['os_family'] }} (os_family)
      with versions '{{ ansible_facts['distribution_major_version'] }}', '{{ ansible_facts['distribution_version'] }}',
      or 'all' is in the list of supported platforms from vars/main.yml: {{ __run_postfix_supported_platforms }}
  when:
    - (__run_postfix_supported_platforms | length) > 0
    - (__run_postfix_supported_platforms
       | selectattr('name', 'match', '^(' ~ ansible_facts['distribution'] ~ '|' ~ ansible_facts['os_family'] ~ ')$', ignorecase=true)
       | map(attribute='versions') | flatten
       | select('match', '^(' ~ ansible_facts['distribution_major_version'] ~ '|' ~ ansible_facts['distribution_version'] ~ '|all)$', ignorecase=true)
       | list | length) < 1
  ignore_errors: true # noqa: ignore-errors


- name: "Init | Set platform-specific filename list (most to least specific; raw with possible duplicates)"
  ansible.builtin.set_fact:
    __run_postfix_platform_filenames_raw:
      - "{{ ansible_facts['distribution'].replace(' ', '_') | lower }}_{{ ansible_facts['distribution_version'].replace(' ', '_') | lower }}.yml"
      - "{{ ansible_facts['distribution'].replace(' ', '_') | lower }}_{{ ansible_facts['distribution_major_version'].replace(' ', '_') | lower }}.yml"
      - "{{ ansible_facts['distribution'].replace(' ', '_') | lower }}.yml"
      - "{{ ansible_facts['os_family'].replace(' ', '_') | lower }}.yml"


- name: "Init | Set unique platform-specific filename list (most to least specific)"
  ansible.builtin.set_fact:
    __run_postfix_platform_filenames_most_specific_first: "{{ (__run_postfix_platform_filenames_raw | ansible.builtin.unique | default([])) }}"


- name: "Init | Set unique platform-specific filename list (least to most specific)"
  ansible.builtin.set_fact:
    __run_postfix_platform_filenames_most_specific_last: "{{ __run_postfix_platform_filenames_most_specific_first | reverse }}"


- name: "Init | Include platform-specific variables (if any), overwrite values with more specific ones"
  ansible.builtin.include_vars:
    file: "{{ __run_postfix_vars_file }}"
  vars:
    __run_postfix_vars_file: "{{ role_path }}/vars/{{ item }}"
  when:
    - __run_postfix_vars_file is file
  loop: "{{ __run_postfix_platform_filenames_most_specific_last }}"


### Postfix specific

- name: "Init | Merge user and default settings"
  ansible.builtin.set_fact:
    # Main
    __run_postfix_merged_maincf_settings: "{{ __run_postfix_maincf_settings_defaults | ansible.builtin.combine(run_postfix_maincf_settings) }}"
    __run_postfix_merged_mastercf_settings: "{{ __run_postfix_mastercf_settings_defaults | ansible.builtin.combine(run_postfix_mastercf_settings) }}"
    # Relay domains
    __run_postfix_merged_relay_domains: "{{ (__run_postfix_relay_domains_list_defaults + run_postfix_relay_domains_list) | ansible.builtin.unique }}"
    # Lookup table: access
    __run_postfix_merged_access_recipient_map: "{{ run_postfix_access_recipient_map | ansible.builtin.combine(__run_postfix_access_recipient_map_defaults) }}"
    __run_postfix_merged_access_sender_map: "{{ run_postfix_access_sender_map | ansible.builtin.combine(__run_postfix_access_sender_map_defaults) }}"
    # Lookup table: canonical
    __run_postfix_merged_canonical_recipient_map: "{{ run_postfix_canonical_recipient_map | ansible.builtin.combine(__run_postfix_canonical_recipient_map_defaults) }}" # noqa: yaml[line-length]
    __run_postfix_merged_canonical_sender_map: "{{ run_postfix_canonical_sender_map | ansible.builtin.combine(__run_postfix_canonical_sender_map_defaults) }}"
    # Lookup table: generic
    __run_postfix_merged_generic_map: "{{ __run_postfix_generic_map_defaults | ansible.builtin.combine(run_postfix_generic_map) }}"
    # Lookup table: relocated
    __run_postfix_merged_relocated_map: "{{ __run_postfix_relocated_map_defaults | ansible.builtin.combine(run_postfix_relocated_map) }}"
    # Lookup table: transport
    __run_postfix_merged_transport_map: "{{ __run_postfix_transport_map_defaults | ansible.builtin.combine(run_postfix_transport_map) }}"
    # Lookup table: virtual
    __run_postfix_merged_virtual_alias_domains: "{{ (__run_postfix_virtual_aliasdomains_list_defaults + run_postfix_virtual_aliasdomains_list) | ansible.builtin.unique }}" # noqa: yaml[line-length]
    __run_postfix_merged_virtual_alias_map: "{{ __run_postfix_virtual_alias_map_defaults | ansible.builtin.combine(run_postfix_virtual_alias_map) }}"
    # SMTP
    __run_postfix_merged_smtp_sasl_password_map: "{{ __run_postfix_smtp_sasl_password_map_defaults | ansible.builtin.combine(run_postfix_smtp_sasl_password_map) }}" # noqa: yaml[line-length]
