# Configuration: Manage settings, like adapting or creating config files.

---

- name: "Config | Default | Print config for master.cf (merged defaults with passed values)"
  ansible.builtin.debug:
    var: __run_postfix_merged_mastercf_settings
    verbosity: 4


- name: "Config | Default | Print config for main.cf (merged defaults with passed values)"
  ansible.builtin.debug:
    var: __run_postfix_merged_maincf_settings
    verbosity: 4


- name: "Config | Default | Convert values in main.cf settings to postconf compatible strings (if needed)"
  ansible.builtin.set_fact:
    # Using an external template file because:
    # 1. Single-line inline templates are hard to read and maintain.
    # 2. Inline multiline Jinja2 with block scalars (>-) are no alternative as
    #    this converts dictionaries to strings objects, needing additional care.
    __run_postfix_merged_maincf_settings: "{{ lookup('template', 'helper_prepare_postconf.j2') }}"


- name: "Config | Default | Print config for main.cf (merged defaults with passed values, prepared for postconf)"
  ansible.builtin.debug:
    var: __run_postfix_merged_maincf_settings
    verbosity: 4


### Relay domains

- name: "Config | Default | Relay domains"
  when:
    - run_postfix_relay_domains_manage is true
  block:

    - name: "Config | Default | Relay domains: Inform if 'relay_domains' config value will be overwritten"
      ansible.builtin.debug:
        msg: |
          Overwriting original "run_postfix_maincf_settings['relay_domains']"
          value "{{ run_postfix_maincf_settings['relay_domains'] }}" with
          "{{ run_postfix_relay_domains_list_tabletype }}:{{ __run_postfix_relaydomains_file }}"
          as "run_postfix_relay_domains_manage" is true. Please add your domains
          to "run_postfix_maincf_settings['relay_domains']".
      when:
        - run_postfix_maincf_settings['relay_domains'] is defined
        - run_postfix_maincf_settings['relay_domains'] | length > 0
        - run_postfix_maincf_settings['relay_domains'] != (run_postfix_relay_domains_list_tabletype ~ ':' ~ __run_postfix_relaydomains_file)


    - name: "Config | Default | Relay domains: Set 'relay_domains' config value"
      ansible.builtin.set_fact:
        __run_postfix_merged_maincf_settings: |
          {{ __run_postfix_merged_maincf_settings | ansible.builtin.combine({
            'relay_domains': (run_postfix_relay_domains_list_tabletype ~ ':' ~ __run_postfix_relaydomains_file)
          }) }}
      when:
        - run_postfix_maincf_settings['relay_domains'] is not defined or
          run_postfix_maincf_settings['relay_domains'] != (run_postfix_relay_domains_list_tabletype ~ ':' ~ __run_postfix_relaydomains_file)


    - name: "Config | Default | Relay domains: Write table file"
      ansible.builtin.template:
        src: "relay_domains.j2"
        dest: "{{ __run_postfix_relaydomains_file }}"
        owner: "{{ __run_postfix_relaydomains_owner }}"
        group: "{{ __run_postfix_relaydomains_group }}"
        mode: "{{ __run_postfix_relaydomains_mode }}"
      notify:
        - "run_postfix: update lookup tables"


    - name: "Config | Default | Relay domains: Remove unwanted files and directories (e.g., to prevent conflicts or resolve incompatibilities)"
      ansible.builtin.file:
        path: "{{ item }}"
        state: "absent"
      loop:
        - "/etc/postfix/relay"


### Lookup table: access (selectively accept, reject, or filter email based on rules with PERMIT, REJECT and DUNNO)

- name: "Config | Default | Lookup-table 'access'"
  when:
    - run_postfix_access_manage is true
  block:

    - name: "Config | Default | Lookup-table 'access': Warn about deprecated Postfix settings"
      ansible.builtin.debug:
        msg: >-
          Warning: You have enabled "run_postfix_access_manage" along with one or more
          other restriction settings which are using the Postfix setting "smtpd_relay_restrictions"
          to manage access rules. The additional usage of the following settings needs
          a deep understanding of the side effects:
          {{ __run_postfix_access_deprecatedsettings | join(', ') }}.
          Consider consolidating your access controls within "smtpd_relay_restrictions" instead.
      vars:
        __run_postfix_access_deprecatedsettings: "{{ __run_postfix_access_deprecatedsettings_list | select('in', run_postfix_maincf_settings.keys()) | list }}"
        __run_postfix_access_deprecatedsettings_list:
          - "smtpd_client_restrictions" # exists for historic reasons (since a long time)
          - "smtpd_helo_restrictions" # exists for historic reasons (since a long time)
          - "smtpd_sender_restrictions" # exists for historic reasons (since a long time)
          - "smtpd_recipient_restrictions" # exists for historic reasons (since Postfix 2.10)
          - "smtpd_data_restrictions"
          - "smtpd_end_of_data_restrictions"
      when:
        - __run_postfix_access_deprecatedsettings | length > 0


    - name: "Config | Default | Lookup-table 'access': Ensure managed restriction classes are defined and added to 'smtpd_relay_restrictions'"
      ansible.builtin.set_fact:
        __run_postfix_merged_maincf_settings: >-
          {{ __run_postfix_merged_maincf_settings | combine({
            'recipient_access': (run_postfix_access_recipient_map_tabletype ~ ':' ~ __run_postfix_table_access_recipient_file),
            'sender_access': (run_postfix_access_sender_map_tabletype ~ ':' ~ __run_postfix_table_access_sender_file),
            'smtpd_restriction_classes': ('recipient_access, sender_access') ~
                                        (', ' ~ __run_postfix_merged_maincf_settings['smtpd_restriction_classes']
                                          if (__run_postfix_merged_maincf_settings['smtpd_restriction_classes'] is defined) and
                                              (__run_postfix_merged_maincf_settings['smtpd_restriction_classes'] | length > 0)),
            'smtpd_relay_restrictions': ('recipient_access, sender_access') ~
                                        (', ' ~ __run_postfix_merged_maincf_settings['smtpd_relay_restrictions']
                                        if (__run_postfix_merged_maincf_settings['smtpd_relay_restrictions'] is defined) and
                                            (__run_postfix_merged_maincf_settings['smtpd_relay_restrictions'] | length > 0))
          }) }}


    - name: "Config | Default | Lookup-table 'access': Write table file (recipient)"
      ansible.builtin.template:
        src: "access_recipient.j2"
        dest: "{{ __run_postfix_table_access_recipient_file }}"
        owner: "{{ __run_postfix_table_access_recipient_owner }}"
        group: "{{ __run_postfix_table_access_recipient_group }}"
        mode: "{{ __run_postfix_table_access_recipient_mode }}"
      notify:
        - "run_postfix: update lookup tables"
        - "run_postfix: update aliases"


    - name: "Config | Default | Lookup-table 'access': Write table file (sender)"
      ansible.builtin.template:
        src: "access_sender.j2"
        dest: "{{ __run_postfix_table_access_sender_file }}"
        owner: "{{ __run_postfix_table_access_sender_owner }}"
        group: "{{ __run_postfix_table_access_sender_group }}"
        mode: "{{ __run_postfix_table_access_sender_mode }}"
      notify:
        - "run_postfix: update lookup tables"
        - "run_postfix: update aliases"


### Lookup table: aliases (selectively accept, reject, or filter email based on rules with PERMIT, REJECT and DUNNO)

- name: "Config | Default | Lookup-table 'aliases'"
  when:
    - run_postfix_aliases_manage is true
  block:

    - name: "Config | Default | Lookup-table 'aliases': Inform if 'alias_maps' config value gets extended"
      ansible.builtin.debug:
        msg: |
          Extending the original "run_postfix_maincf_settings['alias_maps']"
          value "{{ run_postfix_maincf_settings['alias_maps'] }}" with
          "{{ run_postfix_aliases_map_tabletype }}:{{ __run_postfix_table_aliases_file }}"
          at the first position as "run_postfix_aliases_manage" is true.
      when:
        - run_postfix_maincf_settings['alias_maps'] is defined
        - run_postfix_maincf_settings['alias_maps'] | length > 0
        - run_postfix_maincf_settings['alias_maps'] != (run_postfix_aliases_map_tabletype ~ ':' ~ __run_postfix_table_aliases_file)


    - name: "Config | Default | Lookup-table 'aliases': Set 'alias_maps' setting"
      ansible.builtin.set_fact:
        __run_postfix_merged_maincf_settings: |
          {{ __run_postfix_merged_maincf_settings | combine({
            'alias_maps': (run_postfix_aliases_map_tabletype ~ ':' ~ __run_postfix_table_aliases_file) ~
                              (', ' ~ __run_postfix_merged_maincf_settings['alias_maps']
                              if (__run_postfix_merged_maincf_settings['alias_maps'] is defined) and
                                  (__run_postfix_merged_maincf_settings['alias_maps'] | length > 0))
          }) }}
      when:
        - run_postfix_maincf_settings['alias_maps'] is not defined or
          run_postfix_maincf_settings['alias_maps'] != (run_postfix_aliases_map_tabletype ~ ':' ~ __run_postfix_table_aliases_file)


    # The file existence is checked and "ansible.builtin.blockinfile" instead of
    # "ansible.builtin.template" used as the aliases file usually exists and
    # already contains default data which should not be overwritten.
    - name: "Config | Default | Lookup-table 'aliases': Ensure aliases file exists"
      ansible.builtin.file:
        path: "{{ __run_postfix_table_aliases_file }}"
        state: "touch"
        owner: "{{ __run_postfix_table_aliases_owner }}"
        group: "{{ __run_postfix_table_aliases_group }}"
        mode: "{{ __run_postfix_table_aliases_mode }}"
        modification_time: "preserve"
        access_time: "preserve"
      notify:
        # prevent warning: database /etc/aliases[...] is older than source file /etc/aliases
        - "run_postfix: update aliases"


    - name: "Config | Default | Lookup-table 'aliases': update {{ __run_postfix_table_aliases_file }}"
      ansible.builtin.blockinfile:
        path: "{{ __run_postfix_table_aliases_file }}"
        marker: "### {mark} ANSIBLE MANAGED BLOCK ###"
        block: "{{ lookup('template', 'aliases.j2') }}"
      notify:
        - "run_postfix: update aliases"


### Lookup table: canonical (rewrites mail addresses before mail is stored into the queue)

- name: "Config | Default | Lookup-table 'canonical'"
  when:
    - run_postfix_canonical_manage is true
  block:

    - name: "Config | Default | Lookup-table 'canonical': Inform if 'recipient_canonical_maps' config value gets extended"
      ansible.builtin.debug:
        msg: |
          Extending the original "run_postfix_maincf_settings['recipient_canonical_maps']"
          value "{{ run_postfix_maincf_settings['recipient_canonical_maps'] }}" with
          "{{ run_postfix_canonical_recipient_map_tabletype }}:{{ __run_postfix_table_canonical_recipient_file }}"
          at the first position as "run_postfix_canonical_manage" is true.
      when:
        - run_postfix_maincf_settings['recipient_canonical_maps'] is defined
        - run_postfix_maincf_settings['recipient_canonical_maps'] | length > 0
        - run_postfix_maincf_settings['recipient_canonical_maps'] != (run_postfix_canonical_recipient_map_tabletype ~ ':' ~ __run_postfix_table_canonical_recipient_file) # noqa: yaml[line-length]


    - name: "Config | Default | Lookup-table 'canonical': Set 'recipient_canonical_maps' setting"
      ansible.builtin.set_fact:
        __run_postfix_merged_maincf_settings: >-
          {{ __run_postfix_merged_maincf_settings | combine({
            'recipient_canonical_maps': (run_postfix_canonical_recipient_map_tabletype ~ ':' ~ __run_postfix_table_canonical_recipient_file) ~
                                        (', ' ~ __run_postfix_merged_maincf_settings['recipient_canonical_maps']
                                        if (__run_postfix_merged_maincf_settings['recipient_canonical_maps'] is defined) and
                                            (__run_postfix_merged_maincf_settings['recipient_canonical_maps'] | length > 0))
          }) }}
      when:
        - run_postfix_maincf_settings['recipient_canonical_maps'] is not defined or
          run_postfix_maincf_settings['recipient_canonical_maps'] != (run_postfix_canonical_recipient_map_tabletype ~ ':' ~ __run_postfix_table_canonical_recipient_file) # noqa: yaml[line-length]


    - name: "Config | Default | Lookup-table 'canonical': Write table file (recipient)"
      ansible.builtin.template:
        src: "canonical_recipient.j2"
        dest: "{{ __run_postfix_table_canonical_recipient_file }}"
        owner: "{{ __run_postfix_table_canonical_recipient_owner }}"
        group: "{{ __run_postfix_table_canonical_recipient_group }}"
        mode: "{{ __run_postfix_table_canonical_recipient_mode }}"
      notify:
        - "run_postfix: update lookup tables"
        - "run_postfix: update aliases"


    - name: "Config | Default | Lookup-table 'canonical': Inform if 'sender_canonical_maps' config value gets extended"
      ansible.builtin.debug:
        msg: |
          Extending the original "run_postfix_maincf_settings['sender_canonical_maps']"
          value "{{ run_postfix_maincf_settings['sender_canonical_maps'] }}" with
          "{{ run_postfix_canonical_sender_map_tabletype }}:{{ __run_postfix_table_canonical_sender_file }}"
          at the first position as "run_postfix_canonical_manage" is true.
      when:
        - run_postfix_maincf_settings['sender_canonical_maps'] is defined
        - run_postfix_maincf_settings['sender_canonical_maps'] | length > 0
        - run_postfix_maincf_settings['sender_canonical_maps'] != (run_postfix_canonical_sender_map_tabletype ~ ':' ~ __run_postfix_table_canonical_sender_file)


    - name: "Config | Default | Lookup-table 'canonical': Set 'sender_canonical_maps' config value"
      ansible.builtin.set_fact:
        __run_postfix_merged_maincf_settings: |
          {{ __run_postfix_merged_maincf_settings | combine({
            'sender_canonical_maps': (run_postfix_canonical_sender_map_tabletype ~ ':' ~ __run_postfix_table_canonical_sender_file) ~
                                    (', ' ~ __run_postfix_merged_maincf_settings['sender_canonical_maps']
                                      if (__run_postfix_merged_maincf_settings['sender_canonical_maps'] is defined) and
                                        (__run_postfix_merged_maincf_settings['sender_canonical_maps'] | length > 0))
          }) }}
      when:
        - run_postfix_maincf_settings['sender_canonical_maps'] is not defined or
          run_postfix_maincf_settings['sender_canonical_maps'] != (run_postfix_canonical_sender_map_tabletype ~ ':' ~ __run_postfix_table_canonical_sender_file)


    - name: "Config | Default | Lookup-table 'canonical': Write table file (sender)"
      ansible.builtin.template:
        src: "canonical_sender.j2"
        dest: "{{ __run_postfix_table_canonical_sender_file }}"
        owner: "{{ __run_postfix_table_canonical_sender_owner }}"
        group: "{{ __run_postfix_table_canonical_sender_group }}"
        mode: "{{ __run_postfix_table_canonical_sender_mode }}"
      notify:
        - "run_postfix: update lookup tables"
        - "run_postfix: update aliases"


    - name: "Config | Default | Lookup-table 'canonical': Remove unwanted files and directories (e.g., to prevent conflicts or resolve incompatibilities)"
      ansible.builtin.file:
        path: "{{ item }}"
        state: "absent"
      loop:
        - "/etc/postfix/canonical" # File exists by default at least on Red Hat


### Lookup table: generic (provides info for "user has moved to new_location" bounce messages)

- name: "Config | Default | Lookup-table 'generic'"
  when:
    - run_postfix_generic_manage is true
  block:

    - name: "Config | Default | Lookup-table 'generic': Inform if 'lmtp_generic_maps' config value gets extended"
      ansible.builtin.debug:
        msg: |
          Extending the original "run_postfix_maincf_settings['lmtp_generic_maps']"
          value "{{ run_postfix_maincf_settings['lmtp_generic_maps'] }}" with
          "{{ run_postfix_generic_map_tabletype }}:{{ __run_postfix_table_generic_file }}"
          at the first position as "run_postfix_generic_manage" is true.
      when:
        - run_postfix_maincf_settings['lmtp_generic_maps'] is defined
        - run_postfix_maincf_settings['lmtp_generic_maps'] | length > 0
        - run_postfix_maincf_settings['lmtp_generic_maps'] != (run_postfix_generic_map_tabletype ~ ':' ~ __run_postfix_table_generic_file)


    - name: "Config | Default | Lookup-table 'generic': Set 'lmtp_generic_maps' setting"
      ansible.builtin.set_fact:
        __run_postfix_merged_maincf_settings: |
          {{ __run_postfix_merged_maincf_settings | combine({
            'lmtp_generic_maps': (run_postfix_generic_map_tabletype ~ ':' ~ __run_postfix_table_generic_file) ~
                                (', ' ~ __run_postfix_merged_maincf_settings['lmtp_generic_maps']
                                  if (__run_postfix_merged_maincf_settings['lmtp_generic_maps'] is defined) and
                                    (__run_postfix_merged_maincf_settings['lmtp_generic_maps'] | length > 0))
          }) }}
      when:
        - run_postfix_maincf_settings['lmtp_generic_maps'] is not defined or
          run_postfix_maincf_settings['lmtp_generic_maps'] != (run_postfix_generic_map_tabletype ~ ':' ~ __run_postfix_table_generic_file)


    - name: "Config | Default | Lookup-table 'generic': Inform if 'smtp_generic_maps' config value gets extended"
      ansible.builtin.debug:
        msg: |
          Extending the original "run_postfix_maincf_settings['smtp_generic_maps']"
          value "{{ run_postfix_maincf_settings['smtp_generic_maps'] }}" with
          "{{ run_postfix_generic_map_tabletype }}:{{ __run_postfix_table_generic_file }}"
          at the first position as "run_postfix_generic_manage" is true.
      when:
        - run_postfix_maincf_settings['smtp_generic_maps'] is defined
        - run_postfix_maincf_settings['smtp_generic_maps'] | length > 0
        - run_postfix_maincf_settings['smtp_generic_maps'] != (run_postfix_generic_map_tabletype ~ ':' ~ __run_postfix_table_generic_file)


    - name: "Config | Default | Lookup-table 'generic': Set 'smtp_generic_maps' setting"
      ansible.builtin.set_fact:
        __run_postfix_merged_maincf_settings: |
          {{ __run_postfix_merged_maincf_settings | combine({
            'smtp_generic_maps': (run_postfix_generic_map_tabletype ~ ':' ~ __run_postfix_table_generic_file) ~
                                (', ' ~ __run_postfix_merged_maincf_settings['smtp_generic_maps']
                                  if (__run_postfix_merged_maincf_settings['smtp_generic_maps'] is defined) and
                                    (__run_postfix_merged_maincf_settings['smtp_generic_maps'] | length > 0))
          }) }}
      when:
        - run_postfix_maincf_settings['smtp_generic_maps'] is not defined or
          run_postfix_maincf_settings['smtp_generic_maps'] != (run_postfix_generic_map_tabletype ~ ':' ~ __run_postfix_table_generic_file)


    - name: "Config | Default | Lookup-table 'generic': Write table file"
      ansible.builtin.template:
        src: "generic.j2"
        dest: "{{ __run_postfix_table_generic_file }}"
        owner: "{{ __run_postfix_table_generic_owner }}"
        group: "{{ __run_postfix_table_generic_group }}"
        mode: "{{ __run_postfix_table_generic_mode }}"
      notify:
        - "run_postfix: update lookup tables"
        - "run_postfix: update aliases"


### Lookup table: relocated (provides info for "user has moved to new_location" bounce messages)

- name: "Config | Default | Lookup-table 'relocated'"
  when:
    - run_postfix_relocated_manage is true
  block:

    - name: "Config | Default | Lookup-table 'relocated': Inform if 'relocated_maps' config value gets extended"
      ansible.builtin.debug:
        msg: |
          Extending the original "run_postfix_maincf_settings['relocated_maps']"
          value "{{ run_postfix_maincf_settings['relocated_maps'] }}" with
          "{{ run_postfix_relocated_map_tabletype }}:{{ __run_postfix_table_relocated_file }}"
          at the first position as "run_postfix_relocated_manage" is true.
      when:
        - run_postfix_maincf_settings['relocated_maps'] is defined
        - run_postfix_maincf_settings['relocated_maps'] | length > 0
        - run_postfix_maincf_settings['relocated_maps'] != (run_postfix_relocated_map_tabletype ~ ':' ~ __run_postfix_table_relocated_file)


    - name: "Config | Default | Lookup-table 'relocated': Set 'relocated_maps' setting"
      ansible.builtin.set_fact:
        __run_postfix_merged_maincf_settings: |
          {{ __run_postfix_merged_maincf_settings | combine({
            'relocated_maps': (run_postfix_relocated_map_tabletype ~ ':' ~ __run_postfix_table_relocated_file) ~
                              (', ' ~ __run_postfix_merged_maincf_settings['relocated_maps']
                              if (__run_postfix_merged_maincf_settings['relocated_maps'] is defined) and
                                  (__run_postfix_merged_maincf_settings['relocated_maps'] | length > 0))
          }) }}
      when:
        - run_postfix_maincf_settings['relocated_maps'] is not defined or
          run_postfix_maincf_settings['relocated_maps'] != (run_postfix_relocated_map_tabletype ~ ':' ~ __run_postfix_table_relocated_file)


    - name: "Config | Default | Lookup-table 'relocated': Write table file"
      ansible.builtin.template:
        src: "relocated.j2"
        dest: "{{ __run_postfix_table_relocated_file }}"
        owner: "{{ __run_postfix_table_relocated_owner }}"
        group: "{{ __run_postfix_table_relocated_group }}"
        mode: "{{ __run_postfix_table_relocated_mode }}"
      notify:
        - "run_postfix: update lookup tables"
        - "run_postfix: update aliases"


### Lookup table: transport (maps domains or addresses to specific mail delivery methods and destinations)

- name: "Config | Default | Lookup-table 'transport'"
  when:
    - run_postfix_transport_manage is true
  block:

    - name: "Config | Default | Lookup-table 'transport': Inform if 'transport_maps' config value gets extended"
      ansible.builtin.debug:
        msg: |
          Extending the original "run_postfix_maincf_settings['transport_maps']"
          value "{{ run_postfix_maincf_settings['transport_maps'] }}" with
          "{{ run_postfix_transport_map_tabletype }}:{{ __run_postfix_table_transport_file }}"
          at the first position as "run_postfix_transport_manage" is true.
      when:
        - run_postfix_maincf_settings['transport_maps'] is defined
        - run_postfix_maincf_settings['transport_maps'] | length > 0
        - run_postfix_maincf_settings['transport_maps'] != (run_postfix_transport_map_tabletype ~ ':' ~ __run_postfix_table_transport_file)


    - name: "Config | Default | Lookup-table 'transport': Set 'transport_maps' setting"
      ansible.builtin.set_fact:
        __run_postfix_merged_maincf_settings: |
          {{ __run_postfix_merged_maincf_settings | combine({
            'transport_maps': (run_postfix_transport_map_tabletype ~ ':' ~ __run_postfix_table_transport_file) ~
                              (', ' ~ __run_postfix_merged_maincf_settings['transport_maps']
                              if (__run_postfix_merged_maincf_settings['transport_maps'] is defined) and
                                  (__run_postfix_merged_maincf_settings['transport_maps'] | length > 0))
          }) }}
      when:
        - run_postfix_maincf_settings['transport_maps'] is not defined or
          run_postfix_maincf_settings['transport_maps'] != (run_postfix_transport_map_tabletype ~ ':' ~ __run_postfix_table_transport_file)


    - name: "Config | Default | Lookup-table 'transport': Write table file"
      ansible.builtin.template:
        src: "transport.j2"
        dest: "{{ __run_postfix_table_transport_file }}"
        owner: "{{ __run_postfix_table_transport_owner }}"
        group: "{{ __run_postfix_table_transport_group }}"
        mode: "{{ __run_postfix_table_transport_mode }}"
      notify:
        - "run_postfix: update lookup tables"


### Lookup table: virtual (mail)

- name: "Config | Default | Lookup-table 'virtual'"
  when:
    - run_postfix_virtual_manage is true
  block:

    - name: "Config | Default | Lookup-table 'virtual': Inform if 'virtual_alias_maps' config value gets extended"
      ansible.builtin.debug:
        msg: |
          Extending the original "run_postfix_maincf_settings['virtual_alias_maps']"
          value "{{ run_postfix_maincf_settings['virtual_alias_maps'] }}" with
          "{{ run_postfix_virtual_alias_map_tabletype }}:{{ __run_postfix_table_virtual_file }}"
          at the first position as "run_postfix_virtual_manage" is true.
      when:
        - run_postfix_maincf_settings['virtual_alias_maps'] is defined
        - run_postfix_maincf_settings['virtual_alias_maps'] | length > 0
        - run_postfix_maincf_settings['virtual_alias_maps'] != (run_postfix_virtual_alias_map_tabletype ~ ':' ~ __run_postfix_table_virtual_file)


    - name: "Config | Default | Lookup-table 'virtual': Set 'virtual_alias_maps' setting"
      ansible.builtin.set_fact:
        __run_postfix_merged_maincf_settings: |
          {{ __run_postfix_merged_maincf_settings | combine({
            'virtual_alias_maps': (run_postfix_virtual_alias_map_tabletype ~ ':' ~ __run_postfix_table_virtual_file) ~
                                  (', ' ~ __run_postfix_merged_maincf_settings['virtual_alias_maps']
                                  if (__run_postfix_merged_maincf_settings['virtual_alias_maps'] is defined) and
                                      (__run_postfix_merged_maincf_settings['virtual_alias_maps'] | length > 0))
          }) }}
      when:
        - run_postfix_maincf_settings['virtual_alias_maps'] is not defined or
          run_postfix_maincf_settings['virtual_alias_maps'] != (run_postfix_virtual_alias_map_tabletype ~ ':' ~ __run_postfix_table_virtual_file)


    - name: "Config | Default | Lookup-table 'virtual': Write table file"
      ansible.builtin.template:
        src: "virtual.j2"
        dest: "{{ __run_postfix_table_virtual_file }}"
        owner: "{{ __run_postfix_table_virtual_owner }}"
        group: "{{ __run_postfix_table_virtual_group }}"
        mode: "{{ __run_postfix_table_virtual_mode }}"
      notify:
        - "run_postfix: update lookup tables"
        - "run_postfix: update aliases"


    - name: "Config | Default | Lookup-table 'virtual': Inform if 'virtual_alias_domains' config value will be overwritten"
      ansible.builtin.debug:
        msg: |
          Overwriting original "run_postfix_maincf_settings['virtual_alias_domains']"
          value "{{ run_postfix_maincf_settings['virtual_alias_domains'] }}" with
          "{{ run_postfix_virtual_aliasdomains_list_tabletype }}:{{ __run_postfix_table_virtual_aliasdomains_file }}"
          as "run_postfix_virtual_manage" is true. Please add your domains
          to "run_postfix_maincf_settings['virtual_alias_domains']".
      when:
        - run_postfix_maincf_settings['virtual_alias_domains'] is defined
        - run_postfix_maincf_settings['virtual_alias_domains'] | length > 0
        - run_postfix_maincf_settings['virtual_alias_domains'] != (run_postfix_virtual_aliasdomains_list_tabletype ~ ':' ~ __run_postfix_table_virtual_aliasdomains_file) # noqa: yaml[line-length]


    - name: "Config | Default | Lookup-table 'virtual': Set 'virtual_alias_domains' config value"
      ansible.builtin.set_fact:
        __run_postfix_merged_maincf_settings: |
          {{ __run_postfix_merged_maincf_settings | ansible.builtin.combine({
            'virtual_alias_domains': (run_postfix_virtual_aliasdomains_list_tabletype ~ ':' ~ __run_postfix_table_virtual_aliasdomains_file)
          }) }}
      when:
        - run_postfix_maincf_settings['virtual_alias_domains'] is not defined or
          run_postfix_maincf_settings['virtual_alias_domains'] != (run_postfix_virtual_aliasdomains_list_tabletype ~ ':' ~ __run_postfix_table_virtual_aliasdomains_file) # noqa: yaml[line-length]


    - name: "Config | Default | Lookup-table 'virtual': Write table file (alias domains)"
      ansible.builtin.template:
        src: "virtual_domains.j2"
        dest: "{{ __run_postfix_table_virtual_aliasdomains_file }}"
        owner: "{{ __run_postfix_table_virtual_aliasdomains_owner }}"
        group: "{{ __run_postfix_table_virtual_aliasdomains_group }}"
        mode: "{{ __run_postfix_table_virtual_aliasdomains_mode }}"
      notify:
        - "run_postfix: update lookup tables"
        - "run_postfix: update aliases"


### SMTP SASL password credentials

- name: "Config | Default | SMTP SASL password credentials"
  when:
    - run_postfix_smtp_sasl_password_manage is true
  block:

    - name: "Config | Default | SMTP SASL password credentials: Inform if 'smtp_sasl_password_maps' config value gets extended"
      ansible.builtin.debug:
        msg: |
          Extending the original "run_postfix_maincf_settings['smtp_sasl_password_maps']"
          value "{{ run_postfix_maincf_settings['smtp_sasl_password_maps'] }}" with
          "{{ run_postfix_smtp_sasl_password_map_tabletype }}:{{ __run_postfix_smtpsaslpasswordmap_file }}"
          at the first position as "run_postfix_smtp_sasl_password_manage" is true.
      when:
        - run_postfix_maincf_settings['smtp_sasl_password_maps'] is defined
        - run_postfix_maincf_settings['smtp_sasl_password_maps'] | length > 0
        - run_postfix_maincf_settings['smtp_sasl_password_maps'] != (run_postfix_smtp_sasl_password_map_tabletype ~ ':' ~ __run_postfix_smtpsaslpasswordmap_file) # noqa: yaml[line-length]


    - name: "Config | Default | SMTP SASL password credentials: Set 'smtp_sasl_password_maps' setting"
      ansible.builtin.set_fact:
        __run_postfix_merged_maincf_settings: |
          {{ __run_postfix_merged_maincf_settings | combine({
            'smtp_sasl_password_maps': (run_postfix_smtp_sasl_password_map_tabletype ~ ':' ~ __run_postfix_smtpsaslpasswordmap_file) ~
                                      (', ' ~ __run_postfix_merged_maincf_settings['smtp_sasl_password_maps']
                                        if (__run_postfix_merged_maincf_settings['smtp_sasl_password_maps'] is defined) and
                                          (__run_postfix_merged_maincf_settings['smtp_sasl_password_maps'] | length > 0))
          }) }}
      when:
        - run_postfix_maincf_settings['smtp_sasl_password_maps'] is not defined or
          run_postfix_maincf_settings['smtp_sasl_password_maps'] != (run_postfix_smtp_sasl_password_map_tabletype ~ ':' ~ __run_postfix_smtpsaslpasswordmap_file) # noqa: yaml[line-length]


    - name: "Config | Default | SMTP SASL password credentials: Handle mapping configuration"
      ansible.builtin.template:
        src: "smtp_sasl_password.j2"
        dest: "{{ __run_postfix_smtpsaslpasswordmap_file }}"
        owner: "{{ __run_postfix_smtpsaslpasswordmaps_owner }}"
        group: "{{ __run_postfix_smtpsaslpasswordmaps_group }}"
        mode: "{{ __run_postfix_smtpsaslpasswordmaps_mode }}"
      notify:
        - "run_postfix: update lookup tables"


### Main configuration files (handled last as the previous task may changed settings)

- name: "Config | Default | Print postmap lookup table paths (extracted from main.cf settings)"
  ansible.builtin.debug:
    msg: "{{ lookup('template', 'helper_postmap_paths.j2') }}"
    verbosity: 4


- name: "Config | Default | Print postalias lookup table paths (extracted from main.cf settings)"
  ansible.builtin.debug:
    msg: "{{ lookup('template', 'helper_postalias_paths.j2') }}"
    verbosity: 4


- name: "Config | Default | Print config for main.cf (after all optional adaptions ran)"
  ansible.builtin.debug:
    var: __run_postfix_merged_maincf_settings
    verbosity: 4


# Notes on the main.cf handling:
#
# - For details on the format of the file, see the postconf(5) manual page
#   (command: "man 5 postconf" or on-line:  https://www.postfix.org/postconf.5.html).
#
# - From https://www.postfix.org/postconf.5.html:
#   > When the same parameter is defined multiple times, only the last
#   > instance is remembered. Otherwise, the order of main.cf parameter
#   > definitions does not matter.
#   Please note that overwriting values will produce warnings.
#
# - Sadly, it is not possible to import other config files, so one has to edit
#   the existing config file inline.
#
# - The shipped main.cf on platforms vary a lot (e.g. Debian is minimalistic
#   while Red Hat-like contain nearly every setting commented out beside
#   inline documentation).
- name: "Config | Default | Update main.cf"
  # The command or shell module is used here. This approach is justified:
  #
  # - No built-in Ansible module provides a direct way to interact with the
  #   used command.
  # - Inline templating allows for safe and efficient parameter handling,
  #   avoiding the need for multiple additional tasks with little to no benefit.
  # - We first used [lineinfile|blockinfile], but it had major downsides:
  #   1. The need to comment out already-defined values to prevent warnings.
  #   2. The great variation on different platforms may trigger high maintenance
  #      for regexes and edge-cases, changed_when, and so on...
  #   Using postconf in a loop seems to be the sanest way to handle the config.
  #
  # Notes on the command or script itself:
  #
  # See the official documentation for a explanation of the parameters:
  # https://www.postfix.org/postconf.1.html
  ansible.builtin.shell:
    cmd: |
      set -u # Fail on unset vars
      set -o pipefail # Fail if any pipe cmd fails

      # Ensure file existence
      if ! [ -f {{ __run_postfix_maincf_file | ansible.builtin.quote }} ]
      then
        {{ __run_postfix_touch_executable }} {{ __run_postfix_maincf_file | ansible.builtin.quote }}
      fi

      # Ensure file ownership
      {{ __run_postfix_chown_executable }} -c \
        {{ (__run_postfix_maincf_owner ~ ':' ~ __run_postfix_maincf_group) | ansible.builtin.quote }} \
        {{ __run_postfix_maincf_file | ansible.builtin.quote }}

      # Ensure file permissions
      {{ __run_postfix_chmod_executable }} -c {{ __run_postfix_maincf_mode | ansible.builtin.quote }} \
        {{ __run_postfix_maincf_file | ansible.builtin.quote }}

      # Configure
      __run_postfix_checksum_before=$({{ __run_postfix_sha1sum_executable }} {{ __run_postfix_maincf_file | ansible.builtin.quote }})

      set -e # Exit on errors (incl. tests in if/while)
      {% for key, value in __run_postfix_merged_maincf_settings.items() %}
      {{ __run_postfix_postconf_executable }} -e {{ key | ansible.builtin.quote }}={{ value | ansible.builtin.quote }}
      {% endfor %}
      set +e # No exit on errors (needed for following if/while/tests)

      __run_postfix_checksum_after=$({{ __run_postfix_sha1sum_executable }} {{ __run_postfix_maincf_file | ansible.builtin.quote }})
      if [ "${__run_postfix_checksum_before}" != "${__run_postfix_checksum_after}" ]
      then
        printf 'Changed config file: %s' {{ __run_postfix_maincf_file | ansible.builtin.quote }}
      fi

      exit 0
    executable: "/bin/bash" # Support for other shells untested (so far)
  when:
    - __run_postfix_merged_maincf_settings is defined
  changed_when:
    - __run_postfix_config_maincf_result['rc'] == 0
    - __run_postfix_config_maincf_result['stdout'] | trim | length > 0
  register: __run_postfix_config_maincf_result
  notify:
    - "run_postfix: update lookup tables"
    - "run_postfix: update aliases"
    - "run_postfix: restart postfix.service"


# Notes on the master.cf handling:
#
# - For details on the format of the file, see the master(5) manual page
#   (command: "man 5 master" or on-line: http://www.postfix.org/master.5.html).
#
# - Sadly, it is not possible to import other config files, so one has to edit
#   the existing config file inline.
#
# - When multiple lines specify the same service name and type, only the last
#   one is remembered. Please note that overwriting services will produce
#   warnings.
#
# - The shipped master.cf on platforms vary a lot.
- name: "Config | Default | Update master.cf"
  # The command or shell module is used here. This approach is justified:
  #
  # - No built-in Ansible module provides a direct way to interact with the
  #   used command.
  # - Inline templating allows for safe and efficient parameter handling,
  #   avoiding the need for multiple additional tasks with little to no benefit.
  # - We first uses [lineinfile|blockinfile], but it had major downsides:
  #   1. The need to comment out already-defined values to prevent warnings.
  #   2. The great variation on different platforms may trigger high maintenance
  #      for regexes and edge-cases, changed_when, ...
  #   Using postconf in a loop seems to be the sanest way to handle the config.
  #
  # Notes on the command or script itself:
  #
  # See the official documentation for a explanation of the parameters:
  # https://www.postfix.org/postconf.1.html
  ansible.builtin.shell:
    cmd: |
      set -u # Fail on unset vars
      set -o pipefail # Fail if any pipe cmd fails

      # Ensure file existence
      if ! [ -f {{ __run_postfix_mastercf_file | ansible.builtin.quote }} ]
      then
        {{ __run_postfix_touch_executable }} {{ __run_postfix_mastercf_file | ansible.builtin.quote }}
      fi

      # Ensure file ownership
       {{ __run_postfix_chown_executable }} -c \
        {{ (__run_postfix_mastercf_owner ~ ':' ~ __run_postfix_mastercf_group) | ansible.builtin.quote }} \
        {{ __run_postfix_mastercf_file | ansible.builtin.quote }}

      # Ensure file permissions
      {{ __run_postfix_chmod_executable }} -c {{ __run_postfix_mastercf_mode | ansible.builtin.quote }} \
        {{ __run_postfix_mastercf_file | ansible.builtin.quote }}

      # Configure
      __run_postfix_checksum_before=$({{ __run_postfix_sha1sum_executable }} {{ __run_postfix_mastercf_file | ansible.builtin.quote }})

      set -e # Exit on errors (incl. tests in if/while)
      {% for service, fields in __run_postfix_merged_mastercf_settings.items() %}
      {{ __run_postfix_postconf_executable }} -M {{ service ~ '/' ~ fields['type'] | ansible.builtin.quote }}={{
        (
          service ~ ' ' ~
          fields['type'] ~ ' ' ~
          fields['private'] ~ ' ' ~
          fields['unpriv']  ~ ' ' ~
          fields['chroot']  ~ ' ' ~
          fields['wakeup']  ~ ' ' ~
          fields['maxproc']  ~ ' ' ~
          fields['command_args']
        ) | ansible.builtin.quote }}
      {% endfor %}
      set +e # No exit on errors (needed for following if/while/tests)

      __run_postfix_checksum_after=$({{ __run_postfix_sha1sum_executable }} {{ __run_postfix_mastercf_file | ansible.builtin.quote }})
      if [ "${__run_postfix_checksum_before}" != "${__run_postfix_checksum_after}" ]
      then
        printf 'Changed config file: %s' {{ __run_postfix_mastercf_file | ansible.builtin.quote }}
      fi

      exit 0
    executable: "/bin/bash" # Support for other shells untested (so far)
  when:
    - __run_postfix_merged_mastercf_settings is defined
  changed_when:
    - __run_postfix_config_mastercf_result['rc'] == 0
    - __run_postfix_config_mastercf_result['stdout'] | trim | length > 0
  register: __run_postfix_config_mastercf_result
  notify:
    - "run_postfix: restart postfix.service"


- name: "Config | Default | Ensure handler runs (e.g. to create database files) before (re)starting Postfix after packages were installed."
  ansible.builtin.meta: "flush_handlers"
  when:
    - run_postfix_service_state in ['enabled', 'running']
    - (__run_postfix_package_install_result is defined and
       __run_postfix_package_install_result is ansible.builtin.changed) or
      (__run_postfix_package_install_map_backends_result is defined and
       __run_postfix_package_install_map_backends_result is ansible.builtin.changed)
