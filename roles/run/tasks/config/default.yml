# Configuration: Manage settings, like adapting or creating config files.

---


### Virtual mail

- name: "Config | Default | Virtual: Inform if 'virtual_alias_domains' config value will be overwritten"
  ansible.builtin.debug:
    msg: |
      Overwriting original run_postfix_maincf_settings['virtual_alias_domains']
      value '{{ run_postfix_maincf_settings['virtual_alias_domains'] }}' with
      'btree:{{ __run_postfix_virtualaliasdomains_file }}' as
       run_postfix_handle_virtual is true
  when:
    - run_postfix_handle_virtual is true
    - run_postfix_maincf_settings['virtual_alias_domains'] is defined
    - run_postfix_maincf_settings['virtual_alias_domains'] | length > 0
    - run_postfix_maincf_settings['virtual_alias_domains'] != ('btree:' ~ __run_postfix_virtualaliasdomains_file)


- name: "Config | Default | Virtual: Set 'virtual_alias_domains' config value"
  ansible.builtin.set_fact:
    __run_postfix_merged_maincf_settings: |
      {{ __run_postfix_merged_maincf_settings | ansible.builtin.combine(
        { 'virtual_alias_domains': ('btree:' ~ __run_postfix_virtualaliasdomains_file) }
       ) }}
  when:
    - run_postfix_handle_virtual is true
    - run_postfix_maincf_settings['virtual_alias_domains'] is not defined or
      run_postfix_maincf_settings['virtual_alias_domains'] != ('btree:' ~ __run_postfix_virtualaliasdomains_file)


- name: "Config | Default | Virtual: Handle domains configuration"
  ansible.builtin.template:
    src: "virtual_domains.j2"
    dest: "{{ __run_postfix_virtualaliasdomains_file }}"
    owner: "{{ __run_postfix_virtualaliasdomains_owner }}"
    group: "{{ __run_postfix_virtualaliasdomains_group }}"
    mode: "{{ __run_postfix_virtualaliasdomains_mode }}"
  when:
    - run_postfix_handle_virtual is true
  notify:
    - "run_postfix: update lookup tables"
    - "run_postfix: update aliases"


- name: "Config | Default | Virtual: Inform if 'virtual_alias_maps' config value will be overwritten"
  ansible.builtin.debug:
    msg: |
      Overwriting original run_postfix_maincf_settings['virtual_alias_maps']
      value '{{ run_postfix_maincf_settings['virtual_alias_maps'] }}' with
      'btree:{{ __run_postfix_virtualaliasmaps_file }}' as
       run_postfix_handle_virtual is true
  when:
    - run_postfix_handle_virtual is true
    - run_postfix_maincf_settings['virtual_alias_maps'] is defined
    - run_postfix_maincf_settings['virtual_alias_maps'] | length > 0
    - run_postfix_maincf_settings['virtual_alias_maps'] != ('btree:' ~ __run_postfix_virtualaliasmaps_file)


- name: "Config | Default | Virtual: Set 'virtual_alias_maps' setting"
  ansible.builtin.set_fact:
    __run_postfix_merged_maincf_settings: |
      {{ __run_postfix_merged_maincf_settings | ansible.builtin.combine(
        { 'virtual_alias_maps': ('btree:' ~ __run_postfix_virtualaliasmaps_file) }
       ) }}
  when:
    - run_postfix_handle_virtual is true
    - run_postfix_maincf_settings['virtual_alias_maps'] is not defined or
      run_postfix_maincf_settings['virtual_alias_maps'] != ('btree:' ~ __run_postfix_virtualaliasmaps_file)


- name: "Config | Default | Virtual: Handle mapping (redirections and aliasses) configuration"
  ansible.builtin.template:
    src: "virtual_maps.j2"
    dest: "{{ __run_postfix_virtualaliasmaps_file }}"
    owner: "{{ __run_postfix_virtualaliasmaps_owner }}"
    group: "{{ __run_postfix_virtualaliasmaps_group }}"
    mode: "{{ __run_postfix_virtualaliasmaps_mode }}"
  when:
    - run_postfix_handle_virtual is true
  notify:
    - "run_postfix: update lookup tables"
    - "run_postfix: update aliases"


- name: "Config | Default | Virtual: Remove unwanted files and directories (e.g., to prevent conflicts or resolve incompatibilities)"
  ansible.builtin.file:
    path: "{{ item }}"
    state: "absent"
  when:
    - run_postfix_handle_virtual is true
  loop:
    - "/etc/postfix/virtual" # File exists by default at least on Red Hat, SUSE


### Relay domains

- name: "Config | Default | Relay domains: Inform if 'relay_domains' config value will be overwritten"
  ansible.builtin.debug:
    msg: |
      Overwriting original run_postfix_maincf_settings['relay_domains']
      value '{{ run_postfix_maincf_settings['relay_domains'] }}' with
      'btree:{{ __run_postfix_relaydomains_file }}' as
       run_postfix_handle_relay_domains is true
  when:
    - run_postfix_handle_relay_domains is true
    - run_postfix_maincf_settings['relay_domains'] is defined
    - run_postfix_maincf_settings['relay_domains'] | length > 0
    - run_postfix_maincf_settings['relay_domains'] != ('btree:' ~ __run_postfix_relaydomains_file)


- name: "Config | Default | Relay domains: Set 'relay_domains' config value"
  ansible.builtin.set_fact:
    __run_postfix_merged_maincf_settings: |
      {{ __run_postfix_merged_maincf_settings | ansible.builtin.combine(
        { 'relay_domains': ('btree:' ~ __run_postfix_relaydomains_file) }
       ) }}
  when:
    - run_postfix_handle_relay_domains is true
    - run_postfix_maincf_settings['relay_domains'] is not defined or
      run_postfix_maincf_settings['relay_domains'] != ('btree:' ~ __run_postfix_relaydomains_file)


- name: "Config | Default | Relay domains: Handle relay domains configuration"
  ansible.builtin.template:
    src: "relay_domains.j2"
    dest: "{{ __run_postfix_relaydomains_file }}"
    owner: "{{ __run_postfix_relaydomains_owner }}"
    group: "{{ __run_postfix_relaydomains_group }}"
    mode: "{{ __run_postfix_relaydomains_mode }}"
  when:
    - run_postfix_handle_relay_domains is true
  notify:
    - "run_postfix: update lookup tables"
    - "run_postfix: update aliases"


- name: "Config | Default | Relay domains: Remove unwanted files and directories (e.g., to prevent conflicts or resolve incompatibilities)"
  ansible.builtin.file:
    path: "{{ item }}"
    state: "absent"
  when:
    - run_postfix_handle_relay_domains is true
  loop:
    - "/etc/postfix/relay" # File exists by default at least on SUSE


### Transport maps

- name: "Config | Default | Transport: Inform if 'transport_maps' setting will be overwritten"
  ansible.builtin.debug:
    msg: |
      Overwriting original run_postfix_maincf_settings['transport_maps']
      value '{{ run_postfix_maincf_settings['transport_maps'] }}' with
      'btree:{{ __run_postfix_transportmaps_file }}' as
       run_postfix_handle_transport_maps is true
  when:
    - run_postfix_handle_transport_maps is true
    - run_postfix_maincf_settings['transport_maps'] is defined
    - run_postfix_maincf_settings['transport_maps'] | length > 0
    - run_postfix_maincf_settings['transport_maps'] != ('btree:' ~ __run_postfix_transportmaps_file)


- name: "Config | Default | Transport: Set 'transport_maps' setting"
  ansible.builtin.set_fact:
    __run_postfix_merged_maincf_settings: |
      {{ __run_postfix_merged_maincf_settings | ansible.builtin.combine(
        { 'transport_maps': ('btree:' ~ __run_postfix_transportmaps_file) }
       ) }}
  when:
    - run_postfix_handle_transport_maps is true
    - run_postfix_maincf_settings['transport_maps'] is not defined or
      run_postfix_maincf_settings['transport_maps'] != ('btree:' ~ __run_postfix_transportmaps_file)


- name: "Config | Default | Transport: Handle transport mapping configuration"
  ansible.builtin.template:
    src: "transport_maps.j2"
    dest: "{{ __run_postfix_transportmaps_file }}"
    owner: "{{ __run_postfix_transportmaps_owner }}"
    group: "{{ __run_postfix_transportmaps_group }}"
    mode: "{{ __run_postfix_transportmaps_mode }}"
  when:
    - run_postfix_handle_transport_maps is true
  notify:
    - "run_postfix: update lookup tables"
    - "run_postfix: update aliases"


- name: "Config | Default | Transport: Remove unwanted files and directories (e.g., to prevent conflicts or resolve incompatibilities)"
  ansible.builtin.file:
    path: "{{ item }}"
    state: "absent"
  when:
    - run_postfix_handle_transport_maps is true
  loop:
    - "/etc/postfix/transport" # File exists by default at least on Red Hat, SUSE


### Canonical maps

- name: "Config | Default | Canonical: Inform if 'recipient_canonical_maps' config value will be overwritten"
  ansible.builtin.debug:
    msg: |
      Overwriting original run_postfix_maincf_settings['recipient_canonical_maps']
      value '{{ run_postfix_maincf_settings['recipient_canonical_maps'] }}' with
      'btree:{{ __run_postfix_canonicalrecipient_file }}' as
       run_postfix_handle_canonical is true
  when:
    - run_postfix_handle_canonical is true
    - run_postfix_maincf_settings['recipient_canonical_maps'] is defined
    - run_postfix_maincf_settings['recipient_canonical_maps'] | length > 0
    - run_postfix_maincf_settings['recipient_canonical_maps'] != ('btree:' ~ __run_postfix_canonicalrecipient_file)


- name: "Config | Default | Canonical: Set 'recipient_canonical_maps' setting"
  ansible.builtin.set_fact:
    __run_postfix_merged_maincf_settings: |
      {{ __run_postfix_merged_maincf_settings | ansible.builtin.combine(
        { 'recipient_canonical_maps': ('btree:' ~ __run_postfix_canonicalrecipient_file) }
       ) }}
  when:
    - run_postfix_handle_canonical is true
    - run_postfix_maincf_settings['recipient_canonical_maps'] is not defined or
      run_postfix_maincf_settings['recipient_canonical_maps'] != ('btree:' ~ __run_postfix_canonicalrecipient_file)


- name: "Config | Default | Canonical: Handle recipient mappings configuration"
  ansible.builtin.template:
    src: "canonical_recipient.j2"
    dest: "{{ __run_postfix_canonicalrecipient_file }}"
    owner: "{{ __run_postfix_canonicalrecipient_owner }}"
    group: "{{ __run_postfix_canonicalrecipient_group }}"
    mode: "{{ __run_postfix_canonicalrecipient_mode }}"
  when:
    - run_postfix_handle_canonical is true
  notify:
    - "run_postfix: update lookup tables"
    - "run_postfix: update aliases"


- name: "Config | Default | Canonical: Inform if 'sender_canonical_maps' config value will be overwritten"
  ansible.builtin.debug:
    msg: |
      Overwriting original run_postfix_maincf_settings['sender_canonical_maps']
      value '{{ run_postfix_maincf_settings['sender_canonical_maps'] }}' with
      'btree:{{ __run_postfix_canonicalsender_file }}' as
       run_postfix_handle_canonical is true
  when:
    - run_postfix_handle_canonical is true
    - run_postfix_maincf_settings['sender_canonical_maps'] is defined
    - run_postfix_maincf_settings['sender_canonical_maps'] | length > 0
    - run_postfix_maincf_settings['sender_canonical_maps'] != ('btree:' ~ __run_postfix_canonicalsender_file)


- name: "Config | Default | Canonical: Set 'sender_canonical_maps' config value"
  ansible.builtin.set_fact:
    __run_postfix_merged_maincf_settings: |
      {{ __run_postfix_merged_maincf_settings | ansible.builtin.combine(
        { 'sender_canonical_maps': ('btree:' ~ __run_postfix_canonicalsender_file) }
       ) }}
  when:
    - run_postfix_handle_canonical is true
    - run_postfix_maincf_settings['sender_canonical_maps'] is not defined or
      run_postfix_maincf_settings['sender_canonical_maps'] != ('btree:' ~ __run_postfix_canonicalsender_file)


- name: "Config | Default | Canonical: Handle senders mappings configuration"
  ansible.builtin.template:
    src: "canonical_sender.j2"
    dest: "{{ __run_postfix_canonicalsender_file }}"
    owner: "{{ __run_postfix_canonicalsender_owner }}"
    group: "{{ __run_postfix_canonicalsender_group }}"
    mode: "{{ __run_postfix_canonicalsender_mode }}"
  when:
    - run_postfix_handle_canonical is true
  notify:
    - "run_postfix: update lookup tables"
    - "run_postfix: update aliases"


- name: "Config | Default | Canonical: Remove unwanted files and directories (e.g., to prevent conflicts or resolve incompatibilities)"
  ansible.builtin.file:
    path: "{{ item }}"
    state: "absent"
  when:
    - run_postfix_handle_canonical is true
  loop:
    - "/etc/postfix/canonical" # File exists by default at least on Red Hat, SUSE


### Relocated maps

- name: "Config | Default | Relocated: Inform if 'relocated_maps' setting will be overwritten"
  ansible.builtin.debug:
    msg: |
      Overwriting original run_postfix_maincf_settings['relocated_maps']
      value '{{ run_postfix_maincf_settings['relocated_maps'] }}' with
      'btree:{{ __run_postfix_relocatedmaps_file }}' as
       run_postfix_handle_relocated_maps is true
  when:
    - run_postfix_handle_relocated_maps is true
    - run_postfix_maincf_settings['relocated_maps'] is defined
    - run_postfix_maincf_settings['relocated_maps'] | length > 0
    - run_postfix_maincf_settings['relocated_maps'] != ('btree:' ~ __run_postfix_relocatedmaps_file)


- name: "Config | Default | Relocated: Set 'relocated_maps' setting"
  ansible.builtin.set_fact:
    __run_postfix_merged_maincf_settings: |
      {{ __run_postfix_merged_maincf_settings | ansible.builtin.combine(
        { 'relocated_maps': ('btree:' ~ __run_postfix_relocatedmaps_file) }
       ) }}
  when:
    - run_postfix_handle_relocated_maps is true
    - run_postfix_maincf_settings['relocated_maps'] is not defined or
      run_postfix_maincf_settings['relocated_maps'] != ('btree:' ~ __run_postfix_relocatedmaps_file)


- name: "Config | Default | Relocated: Handle relocated mapping configuration"
  ansible.builtin.template:
    src: "relocated.j2"
    dest: "{{ __run_postfix_relocatedmaps_file }}"
    owner: "{{ __run_postfix_relocatedmaps_owner }}"
    group: "{{ __run_postfix_relocatedmaps_group }}"
    mode: "{{ __run_postfix_relocatedmaps_mode }}"
  when:
    - run_postfix_handle_relocated_maps is true
  notify:
    - "run_postfix: update lookup tables"
    - "run_postfix: update aliases"


# - name: "Config | Default | Relocated: Remove unwanted files and directories (e.g., to prevent conflicts or resolve incompatibilities)"
#   ansible.builtin.file:
#     path: "{{ item }}"
#     state: "absent"
#   when:
#     - run_postfix_handle_relocated_maps is true
#   loop:
#     - "/etc/postfix/relocated" # File exists by default at least on Red Hat, SUSE



# FIXME: Implement: Handle sasl_passwd
#        - "/etc/postfix/sasl"  # Directory exists by default at least on Debian


### Main configuration files

- name: "Config | Default | Set permissions of main Postfix configuration files"
  ansible.builtin.file:
    path: "{{ item['file'] }}"
    owner: "{{ item['owner'] }}"
    group: "{{ item['group'] }}"
    mode: "{{ item['mode'] }}"
  loop:
    - file: "{{ __run_postfix_maincf_file }}"
      owner: "{{ __run_postfix_maincf_owner }}"
      group: "{{ __run_postfix_maincf_group }}"
      mode: "{{ __run_postfix_maincf_mode }}"
    - file: "{{ __run_postfix_mastercf_file }}"
      owner: "{{ __run_postfix_mastercf_owner }}"
      group: "{{ __run_postfix_mastercf_group }}"
      mode: "{{ __run_postfix_mastercf_mode }}"


# Notes on the main.cf handling:
#
# - For details on the format of the file, see the postconf(5) manual page
#   (command: "man 5 postconf" or on-line:  https://www.postfix.org/postconf.5.html).
#
# - From https://www.postfix.org/postconf.5.html:
#   > When the same parameter is defined multiple times, only the last
#   > instance is remembered. Otherwise, the order of main.cf parameter
#   > definitions does not matter.
#   Please note that overwriting values will produce warnings.
#
# - Sadly, it is not possible to import other config files, so one has to edit
#   the existing config file inline.
#
# - The shipped main.cf on platforms vary a lot (e.g. Debian is minimalistic
#   while Red Hat-like contain nearly every setting commented out beside
#   inline documentation).
- name: "Config | Default | Update main.cf"
  # The command or shell module is used here. This approach is justified:
  #
  # - No built-in Ansible module provides a direct way to interact with the
  #   used command.
  # - Inline templating allows for safe and efficient parameter handling,
  #   avoiding the need for multiple additional tasks with little to no benefit.
  # - We first uses [lineinfile|blockinfile], but it had major downsides:
  #   1. The need to comment out already-defined values to prevent warnings.
  #   2. The great variation on different platforms may trigger high maintenance
  #      for regexes and edge-cases, changed_when, ...
  #   Using postconf in a loop seems to be the sanest way to handle the config.
  #
  # Notes on the command or script itself:
  #
  # See the official documentation for a explanation of the parameters:
  # https://www.postfix.org/postconf.1.html
  ansible.builtin.shell:
    cmd: |
      set -u # Fail on unset vars
      set -o pipefail # Fail if any pipe cmd fails

      __run_postfix_checksum_before=$({{ __run_postfix_sha1sum_executable }} {{ __run_postfix_maincf_file | ansible.builtin.quote }})

      set -e # exit on any error (incl. in if/while/tests)
      {% for key, value in __run_postfix_merged_maincf_settings.items() %}
      {{ __run_postfix_postconf_executable }} -e {{ key | ansible.builtin.quote }}={{ value | ansible.builtin.quote }}
      {% endfor %}
      set +e # no exit on any error (if/while/tests needed in the following)

      __run_postfix_checksum_after=$({{ __run_postfix_sha1sum_executable }} {{ __run_postfix_maincf_file | ansible.builtin.quote }})
      if [ "${__run_postfix_checksum_before}" != "${__run_postfix_checksum_after}" ]
      then
        printf 'Changed config file: %s' {{ __run_postfix_maincf_file | ansible.builtin.quote }}
      fi

      exit 0
    executable: "/bin/bash" # Support for other shells untested (so far)
  when:
    - __run_postfix_merged_maincf_settings is defined
  changed_when:
    - __run_postfix_config_maincf_result.rc == 0
    - "'Changed config file' in __run_postfix_config_maincf_result.stdout"
  register: __run_postfix_config_maincf_result
  notify:
    - "run_postfix: update lookup tables"
    - "run_postfix: update aliases"
    - "run_postfix: reload postfix.service"



# Notes on the master.cf handling:
#
# - For details on the format of the file, see the master(5) manual page
#   (command: "man 5 master" or on-line: http://www.postfix.org/master.5.html).
#
# - Sadly, it is not possible to import other config files, so one has to edit
#   the existing config file inline.
#
# - When multiple lines specify the same service name and type, only the last
#   one is remembered. Please note that overwriting services will produce
#   warnings.
#
# - The shipped master.cf on platforms vary a lot.

- name: "Config | Default | Update master.cf"
  # The command or shell module is used here. This approach is justified:
  #
  # - No built-in Ansible module provides a direct way to interact with the
  #   used command.
  # - Inline templating allows for safe and efficient parameter handling,
  #   avoiding the need for multiple additional tasks with little to no benefit.
  # - We first uses [lineinfile|blockinfile], but it had major downsides:
  #   1. The need to comment out already-defined values to prevent warnings.
  #   2. The great variation on different platforms may trigger high maintenance
  #      for regexes and edge-cases, changed_when, ...
  #   Using postconf in a loop seems to be the sanest way to handle the config.
  #
  # Notes on the command or script itself:
  #
  # See the official documentation for a explanation of the parameters:
  # https://www.postfix.org/postconf.1.html
  ansible.builtin.shell:
    cmd: |
      set -u # Fail on unset vars
      set -o pipefail # Fail if any pipe cmd fails

      __run_postfix_checksum_before=$({{ __run_postfix_sha1sum_executable }} {{ __run_postfix_mastercf_file | ansible.builtin.quote }})

      set -e # exit on any error (incl. in if/while/tests)
      {% for service, fields in __run_postfix_merged_mastercf_settings.items() %}
      {{ __run_postfix_postconf_executable }} -M {{ service ~ '/' ~ fields['type'] | ansible.builtin.quote }}={{
        (
          service ~ ' ' ~
          fields['type'] ~ ' ' ~
          fields['private'] ~ ' ' ~
          fields['unpriv']  ~ ' ' ~
          fields['chroot']  ~ ' ' ~
          fields['wakeup']  ~ ' ' ~
          fields['maxproc']  ~ ' ' ~
          fields['command_args']
        ) | ansible.builtin.quote }}
      {% endfor %}
      set +e # no exit on any error (if/while/tests needed in the following)

      __run_postfix_checksum_after=$({{ __run_postfix_sha1sum_executable }} {{ __run_postfix_mastercf_file | ansible.builtin.quote }})
      if [ "${__run_postfix_checksum_before}" != "${__run_postfix_checksum_after}" ]
      then
        printf 'Changed config file: %s' {{ __run_postfix_mastercf_file | ansible.builtin.quote }}
      fi

      exit 0
    executable: "/bin/bash" # Support for other shells untested (so far)
  when:
    - __run_postfix_merged_mastercf_settings is defined
  changed_when:
    - __run_postfix_config_mastercf_result.rc == 0
    - "'Changed config file' in __run_postfix_config_mastercf_result.stdout"
  register: __run_postfix_config_mastercf_result
  notify:
    - "run_postfix: restart postfix.service"
