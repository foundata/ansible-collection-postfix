# Configuration: Manage settings, like adapting or creating config files.

---

### Relay domains

- name: "Config | Default | Relay domains: Inform if 'relay_domains' config value will be overwritten"
  ansible.builtin.debug:
    msg: |
      Overwriting original run_postfix_maincf_settings['relay_domains']
      value '{{ run_postfix_maincf_settings['relay_domains'] }}' with
      '{{ __run_postfix_default_lookuptabletype }}:{{ __run_postfix_relaydomains_file }}' as
      run_postfix_relay_domains_manage is true
  when:
    - run_postfix_relay_domains_manage is true
    - run_postfix_maincf_settings['relay_domains'] is defined
    - run_postfix_maincf_settings['relay_domains'] | length > 0
    - run_postfix_maincf_settings['relay_domains'] != (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_relaydomains_file)


- name: "Config | Default | Relay domains: Set 'relay_domains' config value"
  ansible.builtin.set_fact:
    __run_postfix_merged_maincf_settings: |
      {{ __run_postfix_merged_maincf_settings | ansible.builtin.combine(
        { 'relay_domains': (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_relaydomains_file) }
       ) }}
  when:
    - run_postfix_relay_domains_manage is true
    - run_postfix_maincf_settings['relay_domains'] is not defined or
      run_postfix_maincf_settings['relay_domains'] != (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_relaydomains_file)


- name: "Config | Default | Relay domains: Write table file"
  ansible.builtin.template:
    src: "relay_domains.j2"
    dest: "{{ __run_postfix_relaydomains_file }}"
    owner: "{{ __run_postfix_relaydomains_owner }}"
    group: "{{ __run_postfix_relaydomains_group }}"
    mode: "{{ __run_postfix_relaydomains_mode }}"
  when:
    - run_postfix_relay_domains_manage is true
  notify:
    - "run_postfix: update lookup tables"


- name: "Config | Default | Relay domains: Remove unwanted files and directories (e.g., to prevent conflicts or resolve incompatibilities)"
  ansible.builtin.file:
    path: "{{ item }}"
    state: "absent"
  when:
    - run_postfix_relay_domains_manage is true
  loop:
    - "/etc/postfix/relay"


### Lookup table: canonical (rewrites mail addresses before mail is stored into the queue)

- name: "Config | Default | Lookup-table 'canonical': Inform if 'recipient_canonical_maps' config value will be overwritten"
  ansible.builtin.debug:
    msg: |
      Overwriting original run_postfix_maincf_settings['recipient_canonical_maps']
      value '{{ run_postfix_maincf_settings['recipient_canonical_maps'] }}' with
      '{{ __run_postfix_default_lookuptabletype }}:{{ __run_postfix_table_canonical_recipient_file }}' as
      run_postfix_handle_canonical is true
  when:
    - run_postfix_handle_canonical is true
    - run_postfix_maincf_settings['recipient_canonical_maps'] is defined
    - run_postfix_maincf_settings['recipient_canonical_maps'] | length > 0
    - run_postfix_maincf_settings['recipient_canonical_maps'] != (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_table_canonical_recipient_file)


- name: "Config | Default | Lookup-table 'canonical': Set 'recipient_canonical_maps' setting"
  ansible.builtin.set_fact:
    __run_postfix_merged_maincf_settings: |
      {{ __run_postfix_merged_maincf_settings | ansible.builtin.combine(
        { 'recipient_canonical_maps': (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_table_canonical_recipient_file) }
       ) }}
  when:
    - run_postfix_handle_canonical is true
    - run_postfix_maincf_settings['recipient_canonical_maps'] is not defined or
      run_postfix_maincf_settings['recipient_canonical_maps'] != (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_table_canonical_recipient_file)


- name: "Config | Default | Lookup-table 'canonical': Write table file (recipient)"
  ansible.builtin.template:
    src: "canonical_recipient.j2"
    dest: "{{ __run_postfix_table_canonical_recipient_file }}"
    owner: "{{ __run_postfix_table_canonical_recipient_owner }}"
    group: "{{ __run_postfix_table_canonical_recipient_group }}"
    mode: "{{ __run_postfix_table_canonical_recipient_mode }}"
  when:
    - run_postfix_handle_canonical is true
  notify:
    - "run_postfix: update lookup tables"
    - "run_postfix: update aliases"


- name: "Config | Default | Lookup-table 'canonical': Inform if 'sender_canonical_maps' config value will be overwritten"
  ansible.builtin.debug:
    msg: |
      Overwriting original run_postfix_maincf_settings['sender_canonical_maps']
      value '{{ run_postfix_maincf_settings['sender_canonical_maps'] }}' with
      '{{ __run_postfix_default_lookuptabletype }}:{{ __run_postfix_table_canonical_sender_file }}' as
      run_postfix_handle_canonical is true
  when:
    - run_postfix_handle_canonical is true
    - run_postfix_maincf_settings['sender_canonical_maps'] is defined
    - run_postfix_maincf_settings['sender_canonical_maps'] | length > 0
    - run_postfix_maincf_settings['sender_canonical_maps'] != (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_table_canonical_sender_file)


- name: "Config | Default | Lookup-table 'canonical': Set 'sender_canonical_maps' config value"
  ansible.builtin.set_fact:
    __run_postfix_merged_maincf_settings: |
      {{ __run_postfix_merged_maincf_settings | ansible.builtin.combine(
        { 'sender_canonical_maps': (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_table_canonical_sender_file) }
       ) }}
  when:
    - run_postfix_handle_canonical is true
    - run_postfix_maincf_settings['sender_canonical_maps'] is not defined or
      run_postfix_maincf_settings['sender_canonical_maps'] != (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_table_canonical_sender_file)


- name: "Config | Default | Lookup-table 'canonical': Write table file (sender)"
  ansible.builtin.template:
    src: "canonical_sender.j2"
    dest: "{{ __run_postfix_table_canonical_sender_file }}"
    owner: "{{ __run_postfix_table_canonical_sender_owner }}"
    group: "{{ __run_postfix_table_canonical_sender_group }}"
    mode: "{{ __run_postfix_table_canonical_sender_mode }}"
  when:
    - run_postfix_handle_canonical is true
  notify:
    - "run_postfix: update lookup tables"
    - "run_postfix: update aliases"


- name: "Config | Default | Lookup-table 'canonical': Remove unwanted files and directories (e.g., to prevent conflicts or resolve incompatibilities)"
  ansible.builtin.file:
    path: "{{ item }}"
    state: "absent"
  when:
    - run_postfix_handle_canonical is true
  loop:
    - "/etc/postfix/canonical" # File exists by default at least on Red Hat


### Lookup table: relocated (provides info for "user has moved to new_location" bounce messages)

- name: "Config | Default | Lookup-table 'relocated': Inform if 'relocated_maps' setting will be overwritten"
  ansible.builtin.debug:
    msg: |
      Overwriting original run_postfix_maincf_settings['relocated_maps']
      value '{{ run_postfix_maincf_settings['relocated_maps'] }}' with
      '{{ __run_postfix_default_lookuptabletype }}:{{ __run_postfix_table_relocated_file }}' as
      run_postfix_relocated_manage is true
  when:
    - run_postfix_relocated_manage is true
    - run_postfix_maincf_settings['relocated_maps'] is defined
    - run_postfix_maincf_settings['relocated_maps'] | length > 0
    - run_postfix_maincf_settings['relocated_maps'] != (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_table_relocated_file)


- name: "Config | Default | Lookup-table 'relocated': Set 'relocated_maps' setting"
  ansible.builtin.set_fact:
    __run_postfix_merged_maincf_settings: |
      {{ __run_postfix_merged_maincf_settings | ansible.builtin.combine(
        { 'relocated_maps': (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_table_relocated_file) }
       ) }}
  when:
    - run_postfix_relocated_manage is true
    - run_postfix_maincf_settings['relocated_maps'] is not defined or
      run_postfix_maincf_settings['relocated_maps'] != (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_table_relocated_file)


- name: "Config | Default | Lookup-table 'relocated': Write table file"
  ansible.builtin.template:
    src: "relocated.j2"
    dest: "{{ __run_postfix_table_relocated_file }}"
    owner: "{{ __run_postfix_table_relocated_owner }}"
    group: "{{ __run_postfix_table_relocated_group }}"
    mode: "{{ __run_postfix_table_relocated_mode }}"
  when:
    - run_postfix_relocated_manage is true
  notify:
    - "run_postfix: update lookup tables"
    - "run_postfix: update aliases"


### Lookup table: transport (maps domains or addresses to specific mail delivery methods and destinations)

- name: "Config | Default | Lookup-table 'transport': Inform if 'transport_maps' setting will be overwritten"
  ansible.builtin.debug:
    msg: |
      Overwriting original run_postfix_maincf_settings['transport_maps']
      value '{{ run_postfix_maincf_settings['transport_maps'] }}' with
      '{{ __run_postfix_default_lookuptabletype }}:{{ __run_postfix_table_transport_file }}' as
      run_postfix_transport_manage is true
  when:
    - run_postfix_transport_manage is true
    - run_postfix_maincf_settings['transport_maps'] is defined
    - run_postfix_maincf_settings['transport_maps'] | length > 0
    - run_postfix_maincf_settings['transport_maps'] != (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_table_transport_file)


- name: "Config | Default | Lookup-table 'transport': Set 'transport_maps' setting"
  ansible.builtin.set_fact:
    __run_postfix_merged_maincf_settings: |
      {{ __run_postfix_merged_maincf_settings | ansible.builtin.combine(
        { 'transport_maps': (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_table_transport_file) }
       ) }}
  when:
    - run_postfix_transport_manage is true
    - run_postfix_maincf_settings['transport_maps'] is not defined or
      run_postfix_maincf_settings['transport_maps'] != (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_table_transport_file)


- name: "Config | Default | Lookup-table 'transport': Write table file"
  ansible.builtin.template:
    src: "transport.j2"
    dest: "{{ __run_postfix_table_transport_file }}"
    owner: "{{ __run_postfix_table_transport_owner }}"
    group: "{{ __run_postfix_table_transport_group }}"
    mode: "{{ __run_postfix_table_transport_mode }}"
  when:
    - run_postfix_transport_manage is true
  notify:
    - "run_postfix: update lookup tables"


### Lookup table: virtual (mail)

- name: "Config | Default | Lookup-table 'virtual': Inform if 'virtual_alias_maps' config value will be overwritten"
  ansible.builtin.debug:
    msg: |
      Overwriting original run_postfix_maincf_settings['virtual_alias_maps']
      value '{{ run_postfix_maincf_settings['virtual_alias_maps'] }}' with
      '{{ __run_postfix_default_lookuptabletype }}:{{ __run_postfix_table_virtual_file }}' as
      run_postfix_virtual_manage is true
  when:
    - run_postfix_virtual_manage is true
    - run_postfix_maincf_settings['virtual_alias_maps'] is defined
    - run_postfix_maincf_settings['virtual_alias_maps'] | length > 0
    - run_postfix_maincf_settings['virtual_alias_maps'] != (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_table_virtual_file)


- name: "Config | Default | Lookup-table 'virtual': Set 'virtual_alias_maps' setting"
  ansible.builtin.set_fact:
    __run_postfix_merged_maincf_settings: |
      {{ __run_postfix_merged_maincf_settings | ansible.builtin.combine(
        { 'virtual_alias_maps': (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_table_virtual_file) }
       ) }}
  when:
    - run_postfix_virtual_manage is true
    - run_postfix_maincf_settings['virtual_alias_maps'] is not defined or
      run_postfix_maincf_settings['virtual_alias_maps'] != (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_table_virtual_file)


- name: "Config | Default | Lookup-table 'virtual': Write table file"
  ansible.builtin.template:
    src: "virtual.j2"
    dest: "{{ __run_postfix_table_virtual_file }}"
    owner: "{{ __run_postfix_table_virtual_owner }}"
    group: "{{ __run_postfix_table_virtual_group }}"
    mode: "{{ __run_postfix_table_virtual_mode }}"
  when:
    - run_postfix_virtual_manage is true
  notify:
    - "run_postfix: update lookup tables"
    - "run_postfix: update aliases"


- name: "Config | Default | Lookup-table 'virtual': Inform if 'virtual_alias_domains' config value will be overwritten"
  ansible.builtin.debug:
    msg: |
      Overwriting original run_postfix_maincf_settings['virtual_alias_domains']
      value '{{ run_postfix_maincf_settings['virtual_alias_domains'] }}' with
      '{{ __run_postfix_default_lookuptabletype }}:{{ __run_postfix_table_virtual_aliasdomains_file }}' as
      run_postfix_virtual_manage is true
  when:
    - run_postfix_virtual_manage is true
    - run_postfix_maincf_settings['virtual_alias_domains'] is defined
    - run_postfix_maincf_settings['virtual_alias_domains'] | length > 0
    - run_postfix_maincf_settings['virtual_alias_domains'] != (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_table_virtual_aliasdomains_file)


- name: "Config | Default | Lookup-table 'virtual': Set 'virtual_alias_domains' config value"
  ansible.builtin.set_fact:
    __run_postfix_merged_maincf_settings: |
      {{ __run_postfix_merged_maincf_settings | ansible.builtin.combine(
        { 'virtual_alias_domains': (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_table_virtual_aliasdomains_file) }
       ) }}
  when:
    - run_postfix_virtual_manage is true
    - run_postfix_maincf_settings['virtual_alias_domains'] is not defined or
      run_postfix_maincf_settings['virtual_alias_domains'] != (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_table_virtual_aliasdomains_file)


- name: "Config | Default | Lookup-table 'virtual': Write table file (alias domains)"
  ansible.builtin.template:
    src: "virtual_domains.j2"
    dest: "{{ __run_postfix_table_virtual_aliasdomains_file }}"
    owner: "{{ __run_postfix_table_virtual_aliasdomains_owner }}"
    group: "{{ __run_postfix_table_virtual_aliasdomains_group }}"
    mode: "{{ __run_postfix_table_virtual_aliasdomains_mode }}"
  when:
    - run_postfix_virtual_manage is true
  notify:
    - "run_postfix: update lookup tables"
    - "run_postfix: update aliases"


### SMTP SASL password credentials

- name: "Config | Default | SMTP SASL password credentials: Inform if 'smtp_sasl_password_maps' setting will be overwritten"
  ansible.builtin.debug:
    msg: |
      Overwriting original run_postfix_maincf_settings['smtp_sasl_password_maps']
      value '{{ run_postfix_maincf_settings['smtp_sasl_password_maps'] }}' with
      '{{ __run_postfix_default_lookuptabletype }}:{{ __run_postfix_smtpsaslpasswordmaps_file }}' as
      run_postfix_smtp_sasl_password_manage is true
  when:
    - run_postfix_smtp_sasl_password_manage is true
    - run_postfix_maincf_settings['smtp_sasl_password_maps'] is defined
    - run_postfix_maincf_settings['smtp_sasl_password_maps'] | length > 0
    - run_postfix_maincf_settings['smtp_sasl_password_maps'] != (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_smtpsaslpasswordmaps_file)


- name: "Config | Default | SMTP SASL password credentials: Set 'smtp_sasl_password_maps' setting"
  ansible.builtin.set_fact:
    __run_postfix_merged_maincf_settings: |
      {{ __run_postfix_merged_maincf_settings | ansible.builtin.combine(
        { 'smtp_sasl_password_maps': (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_smtpsaslpasswordmaps_file) }
       ) }}
  when:
    - run_postfix_smtp_sasl_password_manage is true
    - run_postfix_maincf_settings['smtp_sasl_password_maps'] is not defined or
      run_postfix_maincf_settings['smtp_sasl_password_maps'] != (__run_postfix_default_lookuptabletype ~ ':' ~ __run_postfix_smtpsaslpasswordmaps_file)


- name: "Config | Default | SMTP SASL password credentials: Handle mapping configuration"
  ansible.builtin.template:
    src: "smtp_sasl_password.j2"
    dest: "{{ __run_postfix_smtpsaslpasswordmaps_file }}"
    owner: "{{ __run_postfix_smtpsaslpasswordmaps_owner }}"
    group: "{{ __run_postfix_smtpsaslpasswordmaps_group }}"
    mode: "{{ __run_postfix_smtpsaslpasswordmaps_mode }}"
  when:
    - run_postfix_smtp_sasl_password_manage is true
  notify:
    - "run_postfix: update lookup tables"


### Main configuration files (handled last as the previous task may changed settings)

# Notes on the main.cf handling:
#
# - For details on the format of the file, see the postconf(5) manual page
#   (command: "man 5 postconf" or on-line:  https://www.postfix.org/postconf.5.html).
#
# - From https://www.postfix.org/postconf.5.html:
#   > When the same parameter is defined multiple times, only the last
#   > instance is remembered. Otherwise, the order of main.cf parameter
#   > definitions does not matter.
#   Please note that overwriting values will produce warnings.
#
# - Sadly, it is not possible to import other config files, so one has to edit
#   the existing config file inline.
#
# - The shipped main.cf on platforms vary a lot (e.g. Debian is minimalistic
#   while Red Hat-like contain nearly every setting commented out beside
#   inline documentation).
- name: "Config | Default | Update main.cf"
  # The command or shell module is used here. This approach is justified:
  #
  # - No built-in Ansible module provides a direct way to interact with the
  #   used command.
  # - Inline templating allows for safe and efficient parameter handling,
  #   avoiding the need for multiple additional tasks with little to no benefit.
  # - We first uses [lineinfile|blockinfile], but it had major downsides:
  #   1. The need to comment out already-defined values to prevent warnings.
  #   2. The great variation on different platforms may trigger high maintenance
  #      for regexes and edge-cases, changed_when, ...
  #   Using postconf in a loop seems to be the sanest way to handle the config.
  #
  # Notes on the command or script itself:
  #
  # See the official documentation for a explanation of the parameters:
  # https://www.postfix.org/postconf.1.html
  ansible.builtin.shell:
    cmd: |
      set -u # Fail on unset vars
      set -o pipefail # Fail if any pipe cmd fails

      # Ensure file existence
      if ! [ -f {{ __run_postfix_maincf_file | ansible.builtin.quote }} ]
      then
        {{ __run_postfix_touch_executable }} {{ __run_postfix_maincf_file | ansible.builtin.quote }}
      fi

      # Ensure file ownership
       {{ __run_postfix_chown_executable }} -c \
        {{ (__run_postfix_maincf_owner ~ ':' ~ __run_postfix_maincf_group) | ansible.builtin.quote }} \
        {{ __run_postfix_maincf_file | ansible.builtin.quote }}

      # Ensure file permissions
      {{ __run_postfix_chmod_executable }} -c {{ __run_postfix_maincf_mode | ansible.builtin.quote }} \
        {{ __run_postfix_maincf_file | ansible.builtin.quote }}

      # Configure
      __run_postfix_checksum_before=$({{ __run_postfix_sha1sum_executable }} {{ __run_postfix_maincf_file | ansible.builtin.quote }})

      set -e # Exit on errors (incl. tests in if/while)
      {% for key, value in __run_postfix_merged_maincf_settings.items() %}
      {{ __run_postfix_postconf_executable }} -e {{ key | ansible.builtin.quote }}={{ value | ansible.builtin.quote }}
      {% endfor %}
      set +e # No exit on errors (needed for following if/while/tests)

      __run_postfix_checksum_after=$({{ __run_postfix_sha1sum_executable }} {{ __run_postfix_maincf_file | ansible.builtin.quote }})
      if [ "${__run_postfix_checksum_before}" != "${__run_postfix_checksum_after}" ]
      then
        printf 'Changed config file: %s' {{ __run_postfix_maincf_file | ansible.builtin.quote }}
      fi

      exit 0
    executable: "/bin/bash" # Support for other shells untested (so far)
  when:
    - __run_postfix_merged_maincf_settings is defined
  changed_when:
    - __run_postfix_config_maincf_result['rc'] == 0
    - __run_postfix_config_maincf_result['stdout'] | trim | length > 0
  register: __run_postfix_config_maincf_result
  notify:
    - "run_postfix: update lookup tables"
    - "run_postfix: update aliases"
    - "run_postfix: restart postfix.service"


# Notes on the master.cf handling:
#
# - For details on the format of the file, see the master(5) manual page
#   (command: "man 5 master" or on-line: http://www.postfix.org/master.5.html).
#
# - Sadly, it is not possible to import other config files, so one has to edit
#   the existing config file inline.
#
# - When multiple lines specify the same service name and type, only the last
#   one is remembered. Please note that overwriting services will produce
#   warnings.
#
# - The shipped master.cf on platforms vary a lot.
- name: "Config | Default | Update master.cf"
  # The command or shell module is used here. This approach is justified:
  #
  # - No built-in Ansible module provides a direct way to interact with the
  #   used command.
  # - Inline templating allows for safe and efficient parameter handling,
  #   avoiding the need for multiple additional tasks with little to no benefit.
  # - We first uses [lineinfile|blockinfile], but it had major downsides:
  #   1. The need to comment out already-defined values to prevent warnings.
  #   2. The great variation on different platforms may trigger high maintenance
  #      for regexes and edge-cases, changed_when, ...
  #   Using postconf in a loop seems to be the sanest way to handle the config.
  #
  # Notes on the command or script itself:
  #
  # See the official documentation for a explanation of the parameters:
  # https://www.postfix.org/postconf.1.html
  ansible.builtin.shell:
    cmd: |
      set -u # Fail on unset vars
      set -o pipefail # Fail if any pipe cmd fails

      # Ensure file existence
      if ! [ -f {{ __run_postfix_mastercf_file | ansible.builtin.quote }} ]
      then
        {{ __run_postfix_touch_executable }} {{ __run_postfix_mastercf_file | ansible.builtin.quote }}
      fi

      # Ensure file ownership
       {{ __run_postfix_chown_executable }} -c \
        {{ (__run_postfix_mastercf_owner ~ ':' ~ __run_postfix_mastercf_group) | ansible.builtin.quote }} \
        {{ __run_postfix_mastercf_file | ansible.builtin.quote }}

      # Ensure file permissions
      {{ __run_postfix_chmod_executable }} -c {{ __run_postfix_mastercf_mode | ansible.builtin.quote }} \
        {{ __run_postfix_mastercf_file | ansible.builtin.quote }}

      # Configure
      __run_postfix_checksum_before=$({{ __run_postfix_sha1sum_executable }} {{ __run_postfix_mastercf_file | ansible.builtin.quote }})

      set -e # Exit on errors (incl. tests in if/while)
      {% for service, fields in __run_postfix_merged_mastercf_settings.items() %}
      {{ __run_postfix_postconf_executable }} -M {{ service ~ '/' ~ fields['type'] | ansible.builtin.quote }}={{
        (
          service ~ ' ' ~
          fields['type'] ~ ' ' ~
          fields['private'] ~ ' ' ~
          fields['unpriv']  ~ ' ' ~
          fields['chroot']  ~ ' ' ~
          fields['wakeup']  ~ ' ' ~
          fields['maxproc']  ~ ' ' ~
          fields['command_args']
        ) | ansible.builtin.quote }}
      {% endfor %}
      set +e # No exit on errors (needed for following if/while/tests)

      __run_postfix_checksum_after=$({{ __run_postfix_sha1sum_executable }} {{ __run_postfix_mastercf_file | ansible.builtin.quote }})
      if [ "${__run_postfix_checksum_before}" != "${__run_postfix_checksum_after}" ]
      then
        printf 'Changed config file: %s' {{ __run_postfix_mastercf_file | ansible.builtin.quote }}
      fi

      exit 0
    executable: "/bin/bash" # Support for other shells untested (so far)
  when:
    - __run_postfix_merged_mastercf_settings is defined
  changed_when:
    - __run_postfix_config_mastercf_result['rc'] == 0
    - __run_postfix_config_mastercf_result['stdout'] | trim | length > 0
  register: __run_postfix_config_mastercf_result
  notify:
    - "run_postfix: restart postfix.service"


- name: "Config | Default | Ensure handler runs (e.g. to create database files) before (re)starting Postfix after packages were installed."
  ansible.builtin.meta: "flush_handlers"
  when:
    - run_postfix_service_state in ['enabled', 'running']
    - (__run_postfix_package_install_result is defined and
       __run_postfix_package_install_result is ansible.builtin.changed) or
      (__run_postfix_package_install_map_backends_result is defined and
       __run_postfix_package_install_map_backends_result is ansible.builtin.changed)
